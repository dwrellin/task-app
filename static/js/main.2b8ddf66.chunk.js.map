{"version":3,"sources":["actions/index.js","App.js","reducers/counter.js","reducers/isLogged.js","reducers/postTask.js","reducers/index.js","reportWebVitals.js","index.js"],"names":["postTask","data","type","payload","App","useState","task","setTask","displayTask","useSelector","state","dispatch","useDispatch","className","placeholder","onChange","e","target","value","onKeyUp","key","onClick","map","index","counterReducer","action","loggedReducer","postTaskReducer","allReducers","combineReducers","counter","isLogged","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","store","createStore","window","__REDUX_DEVTOOLS_EXTENSION__","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"iMAAaA,EAAW,SAAAC,GACtB,MAAO,CACLC,KAAM,OACNC,QAASF,I,OCuDEG,MAtDf,WAAgB,IAAD,EACWC,mBAAS,IADpB,mBACNC,EADM,KACAC,EADA,KAEPC,EAAcC,aAAY,SAAAC,GAAK,OAAIA,EAAMV,YACzCW,EAAWC,cAEjB,OACE,qBAAKC,UAAU,0CAAf,SACE,sBAAKA,UAAU,yBAAf,UACE,oBAAIA,UAAU,4BAAd,8BACA,mBAAGA,UAAU,WAAb,iCAEA,sBAAKA,UAAU,aAAf,UACE,uBACEX,KAAK,OACLW,UAAU,yCACVC,YAAY,6BACZC,SAAU,SAACC,GAAD,OAAOT,EAAQS,EAAEC,OAAOC,QAClCC,QAAS,SAACH,GACHV,GACS,UAAVU,EAAEI,MACJT,EAASX,EAASM,IAClBC,EAAQ,MAGZW,MAAOZ,IAGT,wBACEO,UAAU,oDACVQ,QAAS,WACFf,IACLK,EAASX,EAASM,IAClBC,EAAQ,MALZ,kBAWDC,GACC,6BACGA,EAAYc,KAAI,SAAChB,EAAMiB,GAAP,OACf,mCACE,+BACGA,EAAQ,EADX,KACgBjB,IADPiB,gBCjCVC,G,MAbQ,WAAwB,IAAvBd,EAAsB,uDAAd,EAAGe,EAAW,uCAC5C,OAAOA,EAAOvB,MACZ,IAAK,YACH,OAAOQ,EAAQe,EAAOtB,QAExB,IAAK,YACH,OAAOO,EAAQ,EAEjB,QACE,OAAOA,KCCEgB,EAVO,WAA4B,IAA3BhB,EAA0B,wDAAXe,EAAW,uCAC/C,OAAOA,EAAOvB,MACZ,IAAK,UACH,OAAQQ,EAEV,QACE,OAAOA,I,QCIEiB,EAVS,WAAyB,IAAxBjB,EAAuB,uDAAf,GAAIe,EAAW,uCAC9C,OAAOA,EAAOvB,MACZ,IAAK,OACH,MAAM,GAAN,mBAAWQ,GAAX,CAAkBe,EAAOtB,UAE3B,QACE,OAAOO,ICKEkB,EANKC,YAAgB,CAClCC,QAASN,EACTO,SAAUL,EACV1B,SAAU2B,ICIGK,EAZS,SAAAC,GAClBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCERQ,EAAQC,YACZd,EACAe,OAAOC,8BAAgCD,OAAOC,gCAGhDC,IAASC,OACP,cAAC,IAAD,CAAUL,MAAOA,EAAjB,SACE,cAAC,IAAMM,WAAP,UACE,cAAC,EAAD,QAGJC,SAASC,eAAe,SAM1BjB,M","file":"static/js/main.2b8ddf66.chunk.js","sourcesContent":["export const postTask = data => {\r\n  return {\r\n    type: 'POST',\r\n    payload: data\r\n  }\r\n}","import { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { postTask } from './actions';\n\nfunction App() {\n  const [task, setTask] = useState('');\n  const displayTask = useSelector(state => state.postTask);\n  const dispatch = useDispatch();\n\n  return (\n    <div className='bg-gray-200 min-h-screen font-mono flex'>\n      <div className=\"max-w-screen-md m-auto\">\n        <h1 className='text-5xl antialiased mb-3'>Good day, human!</h1>\n        <p className='text-2xl'>What are you up to?</p>\n\n        <div className='flex my-10'>\n          <input \n            type='text' \n            className='p-2 px-5 w-full rounded rounded-r-none' \n            placeholder='Got bored, made a task app'\n            onChange={(e) => setTask(e.target.value)} \n            onKeyUp={(e) => {\n              if (!task) return;\n              if (e.key === 'Enter') {\n                dispatch(postTask(task));\n                setTask('');\n              }\n            }}\n            value={task}\n          />\n          \n          <button \n            className='bg-white p-2 px-5 text-3xl rounded rounded-l-none'\n            onClick={() => {\n              if (!task) return;\n              dispatch(postTask(task));\n              setTask('');\n            }}>\n              +\n          </button>\n        </div>\n\n        {displayTask && (\n          <ul>\n            {displayTask.map((task, index) => (\n              <>\n                <li key={index}>\n                  {index + 1}. {task}\n                </li>\n              </>\n            ))}\n          </ul>\n        )}\n      </div>\n    </div>\n  );\n}\n\nexport default App;\n","const counterReducer = (state = 0, action) => {\r\n  switch(action.type) {\r\n    case 'INCREMENT':\r\n      return state + action.payload;\r\n\r\n    case 'DECREMENT':\r\n      return state - 1;\r\n\r\n    default:\r\n      return state;\r\n  }\r\n}\r\n\r\nexport default counterReducer; ","const loggedReducer = (state = false, action) => {\r\n  switch(action.type) {\r\n    case 'SIGN_IN':\r\n      return !state;\r\n\r\n    default:\r\n      return state;\r\n  }  \r\n}\r\n\r\nexport default loggedReducer;","const postTaskReducer = (state = [], action) => {\r\n  switch(action.type) {\r\n    case 'POST':\r\n      return [...state, action.payload]\r\n\r\n    default:\r\n      return state\r\n  }\r\n}\r\n\r\nexport default postTaskReducer;","import { combineReducers } from 'redux';\r\nimport counterReducer from './counter';\r\nimport loggedReducer from './isLogged';\r\nimport postTaskReducer from './postTask';\r\n\r\nconst allReducers = combineReducers({\r\n  counter: counterReducer,\r\n  isLogged: loggedReducer,\r\n  postTask: postTaskReducer\r\n})\r\n\r\nexport default allReducers;","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport { Provider } from 'react-redux';\nimport { createStore } from 'redux';\nimport App from './App';\nimport './index.css';\nimport allReducers from './reducers';\nimport reportWebVitals from './reportWebVitals';\n\nconst store = createStore(\n  allReducers,\n  window.__REDUX_DEVTOOLS_EXTENSION__ && window.__REDUX_DEVTOOLS_EXTENSION__()\n);\n\nReactDOM.render(\n  <Provider store={store}>\n    <React.StrictMode>\n      <App />\n    </React.StrictMode>\n  </Provider>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}